program -> func id stmt-list endf


stmt-list -> {stmt}

stmt -> if-stmt | while-stmt | assign-stmt | return-stmt


if-stmt -> if exp then stmt-list [else stmt-list] endi


while-stmt -> while exp do stmt-list endw


assign-stmt -> id is exp


return-stmt -> return exp


exp -> logic-exp [logic logic-exp]


logic -> and | or


logic-exp -> simple-exp [comp simple-exp]


comp -> > | < | =


simple-exp -> term {addop term}


addop -> + | -


term -> factor {mulop factor}


mulop -> * | /


factor -> (exp) | num | id | random | const


random -> random(exp)


const -> current | my | opponent

my -> my(exp)

opponent -> opponent(exp)


current:当前的回合数。


my(exp):自己的前面第exp回合的结果。


opponent(exp):对手前面第exp回合的结果。


[]:表示出现0或1次。

{}:表示出现次数 ≥ 0。


关键字: func endf
 if then else endi while do endw
 is
 return and or comp addop mulop random current my opponent



数字: num -> [0-9]+

标识符: id -> [a-zA-Z][0-9]*